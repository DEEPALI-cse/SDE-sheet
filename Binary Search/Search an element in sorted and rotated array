
//User function template for C++

// vec : given vector of elements
// K : given value whose index we need to find 
int findMin(vector<int>& arr) {
        int n=arr.size();
        int start=0;
        int end = n-1;
        int mid;
        if(arr[start]<=arr[end]) return start;
        while(start<=end){
            mid=start+end/2-start/2;
              
            // if(arr[start]<=arr[end]) return start;
            int prev =(mid-1+n)%n;
            int next = (mid+1+n)%n;
            if(arr[mid]<=arr[prev]&&arr[mid]<=arr[next]) return mid;
            else if(arr[mid]<=arr[end]) end=mid-1;
            else start=mid+1;
        }
        return -1;
    }
    int BS(vector<int> &arr,int start,int end,int x){
        while(start<=end){
            int mid = start-start/2+end/2;
            if(arr[mid]==x) return mid;
            else if(arr[mid]<x) start=mid+1;
            else end = mid-1;
        }
        return -1;
    }
    int Search(vector<int> arr,int x) {
        
        int n = arr.size();
        int min = findMin(arr);
        int end = n-1;
        // cout<<min<<endl;
        int temp = BS(arr,min,end,x);
        if(temp!=-1) return temp;
        else return BS(arr,0,(min-1+n)%n,x);
    }
