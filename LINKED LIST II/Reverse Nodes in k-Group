/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(head==NULL || k==1) return head;
        ListNode *dummy = new ListNode(0);
        ListNode *cur = dummy, *prev = dummy, *nexti = dummy;
        dummy->next = head;
        int count =0;
        ListNode *temp = head;
        while(temp!=NULL){
            temp = temp->next;
            count++;
        }
        while(count>=k){
            cur = prev->next;
            nexti = cur->next;
            for(int i=1; i<k; i++){
                cur->next = nexti->next;
                nexti->next = prev->next;
                prev->next = nexti;
                nexti = cur->next;
            }
            prev = cur;
            count = count-k;
        }
        return dummy->next;
    }
};
