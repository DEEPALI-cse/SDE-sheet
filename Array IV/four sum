class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> ans;
        if(nums.empty()){ return ans;}
        int n = nums.size();
        sort(nums.begin(), nums.end());

        for(int i=0; i<n; i++){
            for(int j=i+1; j<n; j++){
                int target_2 = target-nums[i]-nums[j];

                int front = j+1;
                int back = n-1;

                while(front<back){
                    int two_sum = nums[front] + nums[back];

                    if(two_sum<target_2) front++;
                    else if(two_sum>target_2) back--;
                    else{
                        vector<int> quad(4, 0);
                        quad[0]= nums[i];
                        quad[0]= nums[j];
                        quad[0]= nums[front];
                        quad[0]= nums[back];
                        ans.push_back(quad);

                        while(front < back && nums[front] == quad[2]) front++;
                        while(front< back && nums[back] == quad[3]) back--;
                    }
                }
                while(j+1<n && nums[j+1] == nums[j]) j++;
                
            }
            while(i+1<n && nums[i+1] == nums[i]) i++;
        }
        return ans;
    }
};
